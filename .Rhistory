correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, countPickpocket, use = "complete.obs"))
ggplot(correlation.long, aes(Value, countPickpocket)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Burglary count as a function of risk factors") +
plotTheme()
library(mapview)
mapview(MallsPlazas)
MallsPlazas <-st_read("Openspaces_Mall_Plazas")
mapview(MallsPlazas)
View(MallsPlazas)
dplyr::select(Y = latitude, X = longitude)%>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Mall_Plazas")
Markets <-
read.socrata("https://data.cityofchicago.org/resource/uupf-x98q.json")
View(Markets)
dplyr::select(Y = latitude, X = longitude)%>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Restaurants and Markets")
#Risk Factor 3: Restaurants and Markets
FnB <-
read.socrata("https://data.cityofchicago.org/resource/uupf-x98q.json")%>%
filter(business_activity=="Retail Sales of Perishable Foods") %>%
dplyr::select(Y = latitude, X = longitude)%>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Restaurants and Markets")
#Small Multiple Maps counting number of risk factors in the fishnet
vars_net <-
rbind(streetLightsOut,
LiquorEntertainment,
FnB,
RailStations,
BusStops) %>%
st_join(., fishnet, join=st_within) %>%
st_drop_geometry() %>%
group_by(uniqueID, Legend) %>%
summarize(count = n()) %>%
full_join(fishnet) %>%
spread(Legend, count, fill=0) %>%
st_sf() %>%
dplyr::select(-`<NA>`) %>%
na.omit() %>%
ungroup()
vars_net.long <-
gather(vars_net, Variable, value, -geometry, -uniqueID)
vars <- unique(vars_net.long$Variable)
mapList <- list()
for(i in vars){
mapList[[i]] <-
ggplot() +
geom_sf(data = filter(vars_net.long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(mapList, ncol=3, top="Figure 2: Risk Factors by Fishnet"))
#Small Multiple Maps counting number of risk factors in the fishnet
vars_net <-
rbind(streetLightsOut,
LiquorEntertainment,
FnB,
RailStations,
BusStops) %>%
st_join(., fishnet, join=st_within) %>%
st_drop_geometry() %>%
group_by(uniqueID, Legend) %>%
summarize(count = n()) %>%
full_join(fishnet) %>%
spread(Legend, count, fill=0) %>%
st_sf() %>%
dplyr::select(-`<NA>`) %>%
na.omit() %>%
ungroup()
vars_net.long <-
gather(vars_net, Variable, value, -geometry, -uniqueID)
vars <- unique(vars_net.long$Variable)
mapList <- list()
for(i in vars){
mapList[[i]] <-
ggplot() +
geom_sf(data = filter(vars_net.long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(mapList, ncol=3, top="Figure 2: Risk Factors by Fishnet"))
#Correlation Scatterplots
final_net <-
left_join(crime_net, st_drop_geometry(vars_net), by="uniqueID")
correlation.long <-
st_drop_geometry(final_net) %>%
dplyr::select(-uniqueID, -cvID) %>%
gather(Variable, Value, -countPickpocket)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, countPickpocket, use = "complete.obs"))
ggplot(correlation.long, aes(Value, countPickpocket)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Figure 3: Pick Pocket count as a function of risk factors") +
plotTheme()
View(final_net)
## generates warnings from PROJ issues
## {spdep} to make polygon to neighborhoods...
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
## ... and neighborhoods to list of weigths
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
# print(final_net.weights, zero.policy=TRUE)
## see ?localmoran
local_morans <- localmoran(final_net$countPickpocket, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
# join local Moran's I results to fishnet
final_net.localMorans <-
cbind(local_morans, as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(Vehicle_Offence_Count = countPickpocket,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.05, 1, 0)) %>%
gather(Variable, Value, -geometry)
vars <- unique(final_net.localMorans$Variable)
varList <- list()
for(i in vars){
varList[[i]] <-
ggplot() +
geom_sf(data = filter(final_net.localMorans, Variable == i),
aes(fill = Value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme(title_size = 14) + theme(legend.position="bottom")}
do.call(grid.arrange,c(varList, ncol = 4, top = "Local Morans I statistics, Burglary"))
vars_net <-
vars_net %>%
mutate(
streetLightsOut.nn =
nn_function(st_c(st_coid(vars_net)), st_c(streetLightsOut),5),
LiquorEntertainment.nn =
nn_function(st_c(st_coid(vars_net)), st_c(LiquorEntertainment),5),
FnB.nn =
nn_function(st_c(st_coid(vars_net)), st_c(FnB),5),
RailStations.nn =
nn_function(st_c(st_coid(vars_net)), st_c(RailStations),5),
BusStops.nn =
nn_function(st_c(st_coid(vars_net)), st_c(BusStops),5))
vars_net.long <-
gather(vars_net, Variable, value, -geometry, -uniqueID)
vars <- unique(vars_net.long$Variable)
mapList <- list()
for(i in vars){
mapList[[i]] <-
ggplot() +
geom_sf(data = filter(vars_net.long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(mapList, ncol=3, top="Figure 2: Risk Factors by Fishnet"))
#Correlation Scatterplots
final_net <-
left_join(crime_net, st_drop_geometry(vars_net), by="uniqueID")
correlation.long <-
st_drop_geometry(final_net) %>%
dplyr::select(-uniqueID, -cvID) %>%
gather(Variable, Value, -countPickpocket)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, countPickpocket, use = "complete.obs"))
ggplot(correlation.long, aes(Value, countPickpocket)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Figure 3: Pick Pocket count as a function of risk factors") +
plotTheme()
#Small Multiple Maps counting number of risk factors in the fishnet
vars_net <-
rbind(streetLightsOut,
LiquorEntertainment,
FnB,
RailStations,
BusStops) %>%
st_join(., fishnet, join=st_within) %>%
st_drop_geometry() %>%
group_by(uniqueID, Legend) %>%
summarize(count = n()) %>%
full_join(fishnet) %>%
spread(Legend, count, fill=0) %>%
st_sf() %>%
dplyr::select(-`<NA>`) %>%
na.omit() %>%
ungroup()
vars_net.long <-
gather(vars_net, Variable, value, -geometry, -uniqueID)
vars <- unique(vars_net.long$Variable)
mapList <- list()
for(i in vars){
mapList[[i]] <-
ggplot() +
geom_sf(data = filter(vars_net.long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(mapList, ncol=3, top="Figure 2: Risk Factors by Fishnet"))
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
print(final_net.weights, zero.policy=TRUE)
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
print(final_net.weights, zero.policy=TRUE)
local_morans <- localmoran(final_net$countPickpocket, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
# Join local Moran's I results to fishnet
final_net.localMorans <-
cbind(local_morans, as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(Pickpocket_Count = countPickpocket,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.05, 1, 0)) %>%
gather(Variable, Value, -geometry)
vars <- unique(final_net.localMorans$Variable)
varList <- list()
for(i in vars){
varList[[i]] <-
ggplot() +
geom_sf(data = filter(final_net.localMorans, Variable == i),
aes(fill = Value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme(title_size = 14) + theme(legend.position="bottom")}
do.call(grid.arrange,c(varList, ncol = 4, top = "Local Morans I statistics, Pick Pocket"))
View(crime_net)
plot(crime_net)
plot(crime_net$countPickpocket)
View(fishnet)
View(crime_net)
View(final_net)
st_crs(final_net)
View(vars_net)
#Visualise the distribution of pick pocket
ggplot(final_net,aes(x=countPickpocket))+
geom_bar()
final_net <-
final_net %>%
mutate(Pickpocket.isSig =
ifelse(localmoran(final_net$countPickpocket,
final_net.weights)[,5] <= 0.0000001, 1, 0)) %>%
mutate(Pickpocket.isSig.dist =
nn_function(st_coordinates(st_centroid(final_net)),
st_coordinates(st_centroid(
filter(final_net, Pickpocket.isSig == 1))), k=1))
ggplot() +
geom_sf(data = final_net, aes(fill=abandoned.isSig.dist), colour=NA) +
scale_fill_viridis(name="NN Distance") +
labs(title="Distance to highly significant pick pocket hotspots") +
mapTheme()
final_net <-
final_net %>%
mutate(Pickpocket.isSig =
ifelse(localmoran(final_net$countPickpocket,
final_net.weights)[,5] <= 0.0000001, 1, 0)) %>%
mutate(Pickpocket.isSig.dist =
nn_function(st_coordinates(st_centroid(final_net)),
st_coordinates(st_centroid(
filter(final_net, Pickpocket.isSig == 1))), k=1))
ggplot() +
geom_sf(data = final_net, aes(fill=abandoned.isSig.dist), colour=NA) +
scale_fill_viridis(name="NN Distance") +
labs(title="Distance to highly significant pick pocket hotspots") +
mapTheme()
ggplot() +
geom_sf(data = final_net, aes(fill=Pickpocket.isSig.dist), colour=NA) +
scale_fill_viridis(name="NN Distance") +
labs(title="Distance to highly significant pick pocket hotspots") +
mapTheme()
ggplot() +
geom_sf(data = final_net, aes(fill=Pickpocket.isSig.dist), colour=NA) +
scale_fill_viridis(name="Pickpocket.isSig.dist") +
labs(title="Distance to highly significant pick pocket hotspots") +
mapTheme()
ggplot() +
geom_sf(data = final_net, aes(fill=Pickpocket.isSig.dist), colour=grey) +
scale_fill_viridis(name="Pickpocket.isSig.dist") +
labs(title="Distance to highly significant pick pocket hotspots") +
mapTheme()
ggplot() +
geom_sf(data = final_net, aes(fill=Pickpocket.isSig.dist), colour=NA) +
scale_fill_viridis(name="Pickpocket.isSig.dist") +
labs(title="Distance to highly significant pick pocket hotspots") +
mapTheme()
geom_sf(data = final_net, aes(fill=Pickpocket.isSig.dist), colour="grey"") +
ggplot() +
geom_sf(data = final_net, aes(fill=Pickpocket.isSig.dist), colour="grey") +
ggplot() +
geom_sf(data = final_net, aes(fill=Pickpocket.isSig.dist), colour=NA) +
scale_fill_viridis(name="Pickpocket.isSig.dist") +
labs(title="Figure 5: Distance to highly significant pick pocket hotspots") +
mapTheme()
View(final_net)
View(final_net)
#Visualise the distribution of pick pocket
ggplot(final_net,aes(x=countPickpocket))+
geom_bar()
#Cross-validated Poisson Regression
reg.vars <- c("streetLightsOut", "LiquorEntertainment", "FnB",
"RailStations", "BusStops")
reg.ss.vars <- c("streetLightsOut", "LiquorEntertainment", "FnB",
"RailStations", "BusStops")
reg.spatialCV <- crossValidate(
dataset = final_net,
id = "name",
dependentVariable = "countPickpocket",
indVariables = reg.vars) %>%
dplyr::select(cvID = name, countPickpocket, Prediction, geometry)
reg.cv <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countPickpocket",
indVariables = reg.vars) %>%
dplyr::select(cvID = cvID, countPickpocket, Prediction, geometry)
#Visualise the distribution of pick pocket
ggplot(final_net,aes(x=countPickpocket))+
geom_bar()
#Cross-validated Poisson Regression
reg.vars <- c("streetLightsOut", "LiquorEntertainment", "FnB",
"RailStations", "BusStops")
reg.ss.vars <- c("streetLightsOut", "LiquorEntertainment", "FnB",
"RailStations", "BusStops")
reg.spatialCV <- crossValidate(
dataset = final_net,
id = "name",
dependentVariable = "countPickpocket",
indVariables = reg.vars) %>%
dplyr::select(cvID = name, countPickpocket, Prediction, geometry)
View(vars_net)
#Risk Factor 1: Street Lights
streetLightsOut <-
read.socrata("https://data.cityofchicago.org/Service-Requests/311-Service-Requests-Street-Lights-All-Out/zuxi-7xem") %>%
mutate(year = substr(creation_date,1,4)) %>% filter(year == "2017") %>%
dplyr::select(Y = latitude, X = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Street_Lights_Out")
#Risk Factor 2: Liquor and Entertainment (excluding liquor stores)
LiquorEntertainment <-
read.socrata("https://data.cityofchicago.org/resource/nrmj-3kcf.json") %>%
filter(business_activity != "Retail Sales of Packaged Liquor") %>%
dplyr::select(Y = latitude, X = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Liquor_and_Entertainment")
#Risk Factor 3: Restaurants and Markets
FnB <-
read.socrata("https://data.cityofchicago.org/resource/uupf-x98q.json")%>%
filter(business_activity=="Retail Sales of Perishable Foods") %>%
dplyr::select(Y = latitude, X = longitude)%>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Restaurants_and_Markets")
#Risk Factor 4: Public Transport facilities
RailStations <-st_read("CTA_RailStations")%>%
dplyr::select(geometry)%>%
na.omit() %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Rail_Stations")
BusStops<-st_read("CTA_BusStops")%>%
dplyr::select(geometry)%>%
na.omit() %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Bus_Stops")
neighborhoods <-
st_read("https://raw.githubusercontent.com/blackmad/neighborhoods/master/chicago.geojson") %>%
st_transform(st_crs(fishnet))
#Small Multiple Maps counting number of risk factors in the fishnet
vars_net <-
rbind(streetLightsOut,
LiquorEntertainment,
FnB,
RailStations,
BusStops) %>%
st_join(., fishnet, join=st_within) %>%
st_drop_geometry() %>%
group_by(uniqueID, Legend) %>%
summarize(count = n()) %>%
full_join(fishnet) %>%
spread(Legend, count, fill=0) %>%
st_sf() %>%
dplyr::select(-`<NA>`) %>%
na.omit() %>%
ungroup()
vars_net.long <-
gather(vars_net, Variable, value, -geometry, -uniqueID)
vars <- unique(vars_net.long$Variable)
mapList <- list()
for(i in vars){
mapList[[i]] <-
ggplot() +
geom_sf(data = filter(vars_net.long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(mapList, ncol=3, top="Figure 2: Risk Factors by Fishnet"))
#Correlation Scatterplots
final_net <-
left_join(crime_net, st_drop_geometry(vars_net), by="uniqueID")
correlation.long <-
st_drop_geometry(final_net) %>%
dplyr::select(-uniqueID, -cvID) %>%
gather(Variable, Value, -countPickpocket)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, countPickpocket, use = "complete.obs"))
ggplot(correlation.long, aes(Value, countPickpocket)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Figure 3: Pick Pocket count as a function of risk factors") +
plotTheme()
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
print(final_net.weights, zero.policy=TRUE)
local_morans <- localmoran(final_net$countPickpocket, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
# Join local Moran's I results to fishnet
final_net.localMorans <-
cbind(local_morans, as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(Pickpocket_Count = countPickpocket,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.05, 1, 0)) %>%
gather(Variable, Value, -geometry)
vars <- unique(final_net.localMorans$Variable)
varList <- list()
for(i in vars){
varList[[i]] <-
ggplot() +
geom_sf(data = filter(final_net.localMorans, Variable == i),
aes(fill = Value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme(title_size = 14) + theme(legend.position="bottom")}
do.call(grid.arrange,c(varList, ncol = 4, top = "Figure 4: Local Morans I statistics, Pick Pocket"))
final_net <-
final_net %>%
mutate(Pickpocket.isSig =
ifelse(localmoran(final_net$countPickpocket,
final_net.weights)[,5] <= 0.0000001, 1, 0)) %>%
mutate(Pickpocket.isSig.dist =
nn_function(st_coordinates(st_centroid(final_net)),
st_coordinates(st_centroid(
filter(final_net, Pickpocket.isSig == 1))), k=1))
ggplot() +
geom_sf(data = final_net, aes(fill=Pickpocket.isSig.dist), colour=NA) +
scale_fill_viridis(name="Pickpocket.isSig.dist") +
labs(title="Figure 5: Distance to highly significant pick pocket hotspots") +
mapTheme()
#Visualise the distribution of pick pocket
ggplot(final_net,aes(x=countPickpocket))+
geom_bar()
#Cross-validated Poisson Regression
reg.vars <- c("street_Lights_Out", "Liquor_and_Entertainment", "Restaurants_and_Markets",
"Rail_Stations", "Bus_Stops")
reg.ss.vars <- c("street_Lights_Out", "Liquor_and_Entertainment", "Restaurants_and_Markets",
"Rail_Stations", "Bus_Stops")
reg.spatialCV <- crossValidate(
dataset = final_net,
id = "name",
dependentVariable = "countPickpocket",
indVariables = reg.vars) %>%
dplyr::select(cvID = name, countPickpocket, Prediction, geometry)
reg.spatialCV <- crossValidate(
dataset = final_net,
id = "name",
dependentVariable = "countPickpocket",
indVariables = reg.vars)
mapview(final_net)
if (!"geometry" %in% names(final_net)) {
stop("The dataset final_net does not contain a geometry column.")
}
if (!"geometry" %in% names(final_net)) {
stop("The dataset final_net does not contain a geometry column.")
}
View(MallsPlazas)
reg.summary <-
rbind(
mutate(reg.cv,           Error = Prediction - countPickpocket,
Regression = "Random k-fold CV: Just Risk Factors"),
mutate(reg.ss.cv,        Error = Prediction - countPickpocket,
Regression = "Random k-fold CV: Spatial Process")) %>%
st_sf()
